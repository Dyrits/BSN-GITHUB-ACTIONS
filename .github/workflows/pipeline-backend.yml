name: BSN Backend API Pipeline
on:
  push:
    branches:
      - ci/develop
    paths:
        - book-network/*
        - docker-compose.yml
        - .github/workflows/*-backend.yml

jobs:
    compile:
      runs-on: ubuntu-latest
      name: Compile the BSN Backend API
      steps:
        - name: Checkout the code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up JDK 17
          uses: actions/setup-jdk@v4
          with:
            java-version: 17
            distribution: "corretto"
        - name: Compile and package the BSN Backend API
          run: |
            cd book-network
            ./mvnw clean compile

    test:
        runs-on: ubuntu-latest
        name: Test the BSN Backend API
        steps:
            - name: Checkout the code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Set up JDK 17
              uses: actions/setup-jdk@v4
              with:
                java-version: 17
                distribution: "corretto"
            - name: Test the BSN Backend API
              run: |
                  cd book-network
                  ./mvnw clean test

    build:
      needs: [compile, test]
      runs-on: ubuntu-latest
      name: Build the BSN Backend API Docker image
      steps:
        - name: Checkout the code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: 17
            distribution: "corretto"
        - name: Compile and package the BSN Backend API
          run: |
            cd book-network
            ./mvnw clean package

    build-image:
      needs: [build]
      runs-on: ubuntu-latest
      name: Build the BSN Backend API Docker image
      steps:
        - name: Checkout the code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: 17
            distribution: "corretto"
        - name: Extract project version
          id: extract_version
          run: |
              cd book-network
              echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
        - name: Login to DockerHub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PERSONAL_ACCESS_TOKEN }}
        - name: Build the BSN Backend API Docker image and push to DockerHub
          uses: docker/build-push-action@v5
          with:
            context: book-network
            file: book-network/Dockerfile
            push: true
            platforms: linux/amd64
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-ui:latest
            build-args: |
              APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
              DB_USERNAME=${{ secrets.DB_USERNAME }}
              DB_PASSWORD=${{ secrets.DB_PASSWORD }}
              MAIL_HOSTNAME=${{ secrets.MAIL_HOSTNAME }}
              MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
              MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
              JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}

    # Deploy will fail since we don't have a server to deploy to.
#    deploy:
#      needs: [build-image]
#      runs-on: ubuntu-latest
#      name: Deploy the BSN Backend API
#      steps:
#        - name: Create a deployment folder
#          run: ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "mkdir -p /app"
#        - name: Copy the docker-compose.yml file to the deployment folder
#          run: scp -oStrictHostKeyChecking=no  docker-compose.yml ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_DEPLOYMENT_FOLDER }}
#        - name: Set the environment variables on the remote server and deploy the BSN Backend API
#          run: |
#            ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<EOF
#            export DB_USERNAME=${{ secrets.DB_USERNAME }}
#            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
#            export MAIL_HOSTNAME=${{ secrets.MAIL_HOSTNAME }}
#            export MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
#            export MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
#            export JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
#            cd /app
#            docker-compose -f docker-compose.yml pull -q
#            docker-compose -f docker-compose.yml up -d
#            EOF
